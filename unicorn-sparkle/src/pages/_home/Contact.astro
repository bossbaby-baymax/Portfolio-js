---
import { Icon } from 'astro-icon/components'
import { t } from 'i18n:astro'
import Button from '@components/Button.astro'

const { cta } = t('hero', {
  returnObjects: true
})
const { title, subtitle } = t('contact', {
  returnObjects: true
})
---

<section class="contact">
  <h2 class="headline-1">{title}</h2>
  <h3 class="headline-2">{subtitle}</h3>
  <div class="buttons-container">
    <Button class="filled" href="#">{cta}</Button>
    <Button href="https://www.linkedin.com/in/jordan-wooding-75053a338/">
      <Icon name="linkedin" size={24} />
      <span>LinkedIn</span>
    </Button>
  </div>
  <canvas id="grid"></canvas>
</section>

<style>
  .contact {
    padding-block: 97px;
    padding-inline: 1rem;
    text-align: center;
    border: 1px solid rgba(128, 128, 128, 0.33);
    border-radius: 4px;
    position: relative;
    overflow: hidden;

    @media (width >= 768px) {
      padding-inline: 0;
    }

    & h3 {
      font-weight: initial;
    }

    & .buttons-container {
      display: flex;
      justify-content: center;
      flex-direction: column;
      gap: 13px;
      margin-top: 24px;

      @media (width >= 768px) {
        flex-direction: row;
      }
    }

    & canvas {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: -1;
      pointer-events: none;
    }
  }
</style>

<script>
  import { GridField } from '@scripts/gridfield'

  const canvas = document.querySelector('#grid') as HTMLCanvasElement

  if (canvas) {
    const gridField = new GridField(canvas)

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            // Starts the animation when the canvas enters the view
            gridField.play()
            // Stop looking at the canvas
            observer.unobserve(canvas)
          }
        })
      },
      {
        // Activate when at least 50% of the canvas is visible
        threshold: 0.5
      }
    )

    // Observe the canvas
    observer.observe(canvas)
  } else {
    // Error message if canvas is not found
    console.error("No se encontr√≥ el elemento 'canvas'")
  }
</script>
